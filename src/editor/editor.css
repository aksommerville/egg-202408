html {
  background-color: #333;
  color: #fff;
  font-family: sans-serif;
}

body {
  margin: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  display: flex;
  align-items: stretch;
  justify-content: stretch;
}

body > * {
  flex: 1;
}

.hidden {
  display: none;
}

.modal::backdrop {
  background-color: #000;
  opacity: 0.75;
}

.RootUi {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  justify-content: stretch;
}

.RootUi > .workspace {
  width: calc(100vw - 300px);
  display: flex;
  align-items: stretch;
  justify-content: stretch;
}
.RootUi > .workspace > * {
  width: 100%;
}

.SidebarUi {
  width: 300px;
  border-right: 1px solid #000;
  display: flex;
  flex-direction: column;
  overflow-y: scroll;
}

.SidebarUi > .controls {
  border-bottom: 1px solid #000;
  padding: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5em;
}

.SidebarUi > .controls > .status {
  width: 1em;
  height: 1em;
  border-radius: 0.5em;
  border: 1px solid #000;
}
.SidebarUi > .controls > .status.ok {
  background-color: #0f0;
}
.SidebarUi > .controls > .status.error {
  background-color: #f00;
}
.SidebarUi > .controls > .status.pending {
  background-color: #ff0;
}
.SidebarUi > .controls > .status.dead {
  background-color: #000;
}

.SidebarUi > .instructions {
  font-size: 9pt;
  font-style: italic;
  border-bottom: 1px solid #000;
}

.SidebarUi > .toc {
  user-select: none;
}

.SidebarUi li.dir > ul.dir {
  display: none;
}
.SidebarUi li.dir.open > ul.dir {
  display: initial;
}
.SidebarUi ul.dir {
  margin: 0;
  padding: 0;
  list-style-type: none;
  cursor: pointer;
}
.SidebarUi .dirlabel {
  background-color: #000;
  font-weight: bold;
  padding: 0.25em 0.5em;
}
.SidebarUi li.dir.open > .dirlabel {
  background-color: #008;
}
.SidebarUi li.file {
  padding-left: 0.75em;
}
.SidebarUi li.file:hover {
  background-color: #112;
}
.SidebarUi li.file.open {
  background-color: #ff0;
  color: #000;
}

.GenericModal {
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.GenericModal.error {
  background-color: #400;
  color: #fff;
  font-family: monospace;
  white-space: pre;
}

.GenericModal > iframe {
  min-width: 50px;
  min-height: 50px;
  max-width: 90vw;
  max-height: 90vh;
}

.HexEditor {
  display: flex;
  align-items: center;
  justify-content: center;
}
.HexEditor > textarea {
  /* Don't use the full 100%, but of course then it gets screwy when the scroll bar enables. */
  width: 90%;
  height: 90%;
  background-color: #34a; /* Use weird colors to distinguish from text editor. */
  color: #fff;
  font-weight: bold;
}

.TextEditor {
  display: flex;
  align-items: center;
  justify-content: center;
}
.TextEditor > textarea {
  /* Don't use the full 100%, but of course then it gets screwy when the scroll bar enables. */
  width: 90%;
  height: 90%;
}

.StringEditor {
  overflow-y: scroll;
}
.StringEditor > table {
  width: 100%;
}
.StringEditor th {
  border-bottom: 1px solid #000;
  text-align: left;
}
.StringEditor th.id {
  width: 10%;
}
.StringEditor tr.res:nth-child(even) {
  background-color: #282828;
}
.StringEditor input[type='text'] {
  width: calc(100% - 5px);
  background-color: unset;
  color: #fff;
}

.ImageEditor {
  display: flex;
  align-items: center;
  justify-content: center;
}
.ImageEditor > img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  image-rendering: pixelated;
}

.MetadataEditor > table {
  width: 100%;
}
.MetadataEditor td.key {
  text-align: right;
  width: 150px;
}
.MetadataEditor td.key.help {
  color: #ccf;
  cursor: pointer;
}
.MetadataEditor td.string {
  width: 100px;
}
.MetadataEditor td.string > input {
  width: 100%;
}
.MetadataEditor td.value > input {
  width: calc(100% - 10px);
}
.MetadataEditor .validationError {
  height: 1lh;
  font-size: 8pt;
  color: #fcc;
}

.SongEventsEditor {
  display: flex;
  flex-direction: column;
  overflow: scroll;
}
.SongEventsEditor > .controls {
  background-color: #222;
  border-bottom: 1px solid #000;
  position: sticky;
  top: 0;
  display: flex;
  flex-direction: row;
}
.SongEventsEditor > .controls > .spacer {
  flex: 1;
}
.SongEventsEditor > .main {
}
.SongEventsEditor > .main tr:nth-child(odd) {
  background-color: #222;
}
.SongEventsEditor > .main th {
  text-align: left;
  cursor: pointer;
}
.SongEventsEditor > .main input.event {
  display: block;
}

.SongHeaderEditor .playback {
  width: 100%;
  display: flex;
  flex-direction: row;
}
.SongHeaderEditor .playback > .playhead {
  flex: 1;
  height: 2em;
}
.SongHeaderEditor td.key {
  text-align: right;
}
.SongHeaderEditor .channels {
  width: 100%;
}
.SongHeaderEditor .channels th.label {
  width: 25%;
}
.SongHeaderEditor .channels th.pid {
  width: 25%;
}
.SongHeaderEditor .channels input {
  width: 100%;
}
.SongHeaderEditor .channels select {
  width: 100%;
}

/* From egg-202405/synthwerk.
 **************************************************************/
 
.SfgEditor {
  display: flex;
  flex-direction: column;
  position: relative;
}

.SfgEditor > .ChooseSoundUi {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: #111;
  overflow-y: scroll;
}

.ChooseSoundUi .card {
  display: inline-block;
  vertical-align: top;
  margin: 0.5em;
  padding: 0.5em;
  border: 1px solid #000;
  border-radius: 0.5em;
  background-color: #444;
}

.ChooseSoundUi .card .buttonRow {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.InputUi {
  flex: 1;
}

.OutputUi {
  height: 200px;
  display: flex;
  flex-direction: row;
  border-top: 1px solid #000;
}

.OutputUi > .buttons {
  display: flex;
  flex-direction: column;
}

.WaveVisualUi {
  flex: 1;
  display: flex;
  align-items: stretch;
  justify-content: stretch;
}

.WaveVisualUi > canvas {
  flex: 1;
  cursor: pointer;
  user-select: none;
}

/* Modals.
 **********************************************************/
 
.TextModal > textarea {
  width: 50vw;
  height: 50vh;
}

.TextModal.dirty > textarea {
  background-color: #eda;
}

/* InputUi
 ******************************************************/
 
.InputUi {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  justify-content: stretch;
  max-height: calc(100% - 200px);
}

.InputUi > .controls {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: stretch;
  border-right: 1px solid #000;
}

.InputUi > .voicesContainer {
  display: flex;
  flex-direction: row;
  overflow-x: scroll;
  overflow-y: hidden;
}

.VoiceUi {
  background-color: #111;
  border: 1px solid #000;
  margin: 0.5em;
/*  height: calc(100% - 20px); /* accomodate scroll bar */
  overflow-y: scroll;
  width: 480px;
  min-width: 480px;
  display: flex;
  flex-direction: column;
  justify-content: stretch;
}

.VoiceFieldUi {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: stretch;
  background-color: #444;
  border-top: 1px solid #666;
  border-bottom: 1px solid #222;
}

.VoiceFieldUi > .upper {
  height: 2em;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: stretch;
}

.VoiceFieldUi > .upper > .key {
  margin-left: 0.5em;
  margin-right: 0.5em;
}

.VoiceFieldUi > .upper > .spacer {
  flex: 1;
}

.VoiceFieldUi > .upper > input[type="number"] {
  width: 60px;
}

/* SliderUi
 *************************************************************/
 
.SliderUi {
  position: relative;
  min-width: 50px;
  flex: 1;
  user-select: none;
}

.SliderUi > .groove {
  position: absolute;
  border: 1px solid #444;
  background-color: #666;
  left: 40%;
  right: 40%;
  top: 16px;
  bottom: 16px;
}

.SliderUi > .thumb {
  position: absolute;
  border: 1px solid #000;
  background-color: #aaa;
  width: 75%;
  left: 12.5%;
  height: 20px;
  top: 0px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.SliderUi > .thumb > .display {
  font-family: sans-serif;
  font-size: 8pt;
  color: #000;
}

/* HarmonicsUi, EnvUi
 *******************************************************/
 
.HarmonicsUi {
  cursor: pointer;
  user-select: none;
}

.EnvUi {
  cursor: pointer;
  user-select: none;
}
